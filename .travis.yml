language: shell

env:
  global:
    - DEPS="scikit-image>=0.15.0 matplotlib-base>=3.1.1 scikit-learn>=0.19 hyperspy-base==1.5.2 diffsims>=0.3 lmfit>=0.9.12 ipywidgets pyfai-base numba"
    - TEST_DEPS="pytest>=5.0 pytest-cov>=2.8.1 coveralls>=1.10 coverage>=5.0"

matrix:
  include:
  - name: "Python 3.9 on Linux"
    env: export PYTHON=3.9; PIPONLY="false"
    before_install: wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh

  - name: "Python 3.8 on Linux"
    env: export PYTHON=3.8; PIPONLY="false"
    before_install: wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh

  - name: "3.9, Linux, pip"
    env: export PYTHON=3.9; PIPONLY="true"
    before_install: wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh

  - name: "3.8, Linux, pip"
    env: export PYTHON=3.8; PIPONLY="true"
    before_install: wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh

  - name: "Python 3.9 on MacOS"
    os: osx
    env: export PYTHON=3.9; PIPONLY="false"
    before_install: wget "https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh" -O miniconda.sh

  - name: "Python 3.8 on MacOS"
    os: osx
    env: export PYTHON=3.8; PIPONLY="false"
    before_install: wget "https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh" -O miniconda.sh

  - name: "Python 3.9 on Windows"
    os: windows
    env: EXPORT PYTHON=3.9; PATH="/c/tools/miniconda3/:/c/tools/miniconda3/Scripts:$PATH"; PIPONLY="false"
    before_install: choco install -y miniconda3 openssl.light

  - name: "Python 3.8 on Windows"
    os: windows
    env: EXPORT PYTHON=3.8; PATH="/c/tools/miniconda3/:/c/tools/miniconda3/Scripts:$PATH"; PIPONLY="false"
    before_install: choco install -y miniconda3 openssl.light



sudo: True #for Miniconda

install:
  # Completes the installation of miniconda
  - if [[ "$TRAVIS_OS_NAME" =~ ^(linux|osx)$ ]]; then
       chmod +x miniconda.sh;
       ./miniconda.sh -b -p $HOME/miniconda;
       source $HOME/miniconda/bin/activate root;
    fi
  # setup environment
  - conda update -y conda;
  - conda config --append channels conda-forge;
  - conda create -n testenv --yes python=$PYTHON;
  - if [[ "$TRAVIS_OS_NAME" =~ ^(linux|osx)$ ]]; then
      conda activate testenv;
    else
      . activate testenv;
    fi
  - conda activate testenv;
  - if [ "$PIPONLY" = "true" ]; then
       conda install -y $TEST_DEPS;
    else
       conda install -y $DEPS $TEST_DEPS;
    fi
  - pip install .

script:
  - export MPLBACKEND=Agg
  # runs slow tests
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      pytest --pyargs pyxem --cov=pyxem --runslow;
    else
      pytest --pyargs pyxem --cov=pyxem;
    fi
  - coveralls
